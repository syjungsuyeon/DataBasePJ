// 마지막고침 : 2020.11.17
// win32 Visual C 2010 이상컴파일시 추가
// 프로그램 가장 첫 줄에 추가할 것
/*-------------------------------------------
화면의 특정 위치에서 사용자 입력을 받은 후 테이블에 
update 함
--------------------------------------------*/
#define _CRT_SECURE_NO_WARNINGS
//-------------------------------------------

#include <stdlib.h>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <conio.h>

/* for oracle */
#include <sqlda.h>
#include <sqlca.h>
#include <sqlcpr.h>

//#ifdef WIN32
#include < windows.h >
/*---------------  화면 커서 위치 제어 ----------------------*/
void gotoxy(int x, int y) ;
void getxy(int *x, int *y) ;
void clrscr(void) ;
/*-----------------------------------------------------------*/
#define getch() _getch()

void print_screen(char fname[]);
void DB_connect();
void ut_Select_tuple();
void ut_Update_tuple();

void sql_error();

EXEC SQL BEGIN DECLARE SECTION;
	VARCHAR uid[80];
	VARCHAR pwd[20];
EXEC SQL END DECLARE SECTION;

char bn[100], dn[100], pn1[100], pn2[100], pc[100], pr[100], ed[100], tc[100];

void ut_Update_tuple()
{

EXEC SQL BEGIN DECLARE SECTION;
    char dynstmt[1000];
EXEC SQL END DECLARE SECTION;

    char no_temp4[100];
    char no_temp5[100];
    char no_temp6[100];
    char no_temp7[100];
    char no_temp8[100];

    EXEC SQL WHENEVER SQLERROR DO sql_error("\7ORACLE ERROR:\n");
    clrscr();
    system("cls");
    print_screen("src_UpdateTransaction.txt");

    ut_Select_tuple();
     
   /* 변경된 상품명 */
   gotoxy(29,10); 
   gets(no_temp4);
   if(no_temp4[0] == '\0' ) {
       printf("%s\n", pn1);
       strcpy(no_temp4, pn1);
   }

   /* 수량 */
   gotoxy(29,12);
   gets(no_temp5);
   if(no_temp5[0] == '\0' ) {
       printf("%s\n", pc);
       strcpy(no_temp5, pc);
   }

   /* 가격 */
   gotoxy(29,14); 
   gets(no_temp6);
   if(no_temp6[0] == '\0' ) {
       printf("%s\n", pr);
       strcpy(no_temp6, pr);
   }

   /* 거래 종료 일자 */
   gotoxy(29,16); 
   gets(no_temp7);
   if(no_temp7[0] == '\0' ) {
       printf("%s\n", ed);
       strcpy(no_temp7, ed);
   }

   /* 거래 횟수 */
   gotoxy(29,18);
   gets(no_temp8);
   if(no_temp8[0] == '\0' ) {
       printf("%s\n", tc);
       strcpy(no_temp8, tc);
   }

   sprintf(dynstmt,"update Transaction set Product_name='%s',  Product_count=%s, Price=%s, End_day=to_date('%s', 'YYYYMMDD'), Trans_count=%s where Business_num='%s' and Distributor_num='%s' and Product_name = '%s'", no_temp4, no_temp5, no_temp6, no_temp7, no_temp8, bn, dn, pn1);

   EXEC SQL EXECUTE IMMEDIATE :dynstmt ;

   EXEC SQL COMMIT WORK ; 

   getch();
   select_main();

}

void ut_Select_tuple()
{

    EXEC SQL BEGIN DECLARE SECTION;

    char no_temp1[100];
    char no_temp2[100];
    char no_temp3[100];

    varchar v_bn[100];
    varchar v_dn[100];
    varchar v_pn1[100];
    varchar v_pc[100];
    varchar v_pr[100];
    varchar v_ed[100];
    varchar v_tc[100];

    char dynstmt[1000];
    EXEC SQL END DECLARE SECTION;

   /* 사업자 번호 */
   gotoxy(20,7);  
   gets(bn);

   /* 유통업자 번호 */
   gotoxy(47,7); 
   gets(dn);

   /* 변경할 상품명 */
   gotoxy(64,7); 
   gets(pn1);

   sprintf(dynstmt, "select product_name, product_count, price, to_char(end_day,'YYYYMMDD'), trans_count from transaction where business_num = '%s' and distributor_num = %s and product_name = '%s'", bn, dn, pn1);

EXEC SQL PREPARE S FROM :dynstmt ;

    EXEC SQL DECLARE c_cursor CURSOR FOR S ; 

    EXEC SQL OPEN c_cursor ; 

    EXEC SQL WHENEVER NOT FOUND do break;
    for(;;)
    {
        EXEC SQL FETCH c_cursor INTO :v_pn1, :v_pc, :v_pr, :v_ed, :v_tc;

	    v_pn1.arr[v_pn1.len] = '\0';
	    v_pc.arr[v_pc.len] = '\0';
	    v_pr.arr[v_pr.len] = '\0';
	    v_ed.arr[v_ed.len] = '\0';
	    v_tc.arr[v_tc.len] = '\0';
    };
    strcpy(pc, v_pc.arr);
    strcpy(pr, v_pr.arr);
    strcpy(ed, v_ed.arr);
    strcpy(tc, v_tc.arr);

    EXEC SQL CLOSE c_cursor; 
}